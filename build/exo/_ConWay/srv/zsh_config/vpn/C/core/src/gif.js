const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();


async function main() {

    const GIF = `"Le g√©n√©rateur de GIF AI permet de cr√©er des GIFs de haute qualit√© en transformant des descriptions textuelles en images anim√©es "`;
    const base64 = `"
    Comprendre le Base64 > https://www.base64decode.org/
    Le Base64 est un syst√®me d'encodage qui utilise 64 caract√®res pour repr√©senter des donn√©es binaires, facilitant leur stockage et transfert sur des supports textuels.
    Il est couramment utilis√© pour encoder des fichiers tels que des images, des documents et des fichiers audio, garantissant l'int√©grit√© des donn√©es lors de leur transport.
    Le processus d'encodage augmente la taille des donn√©es d'environ 33 %, car 3 octets de donn√©es binaires sont convertis en 4 caract√®res ASCII.
    "`;
    const encode = `"${GIF}+${base64}"`
    groq.chat.completions.create({
        //
        // Required parameters
        //
        messages: [
            // D√©finir un message syst√®me optionnel. Cela √©tablit le comportement de l'assistant
            // et peut √™tre utilis√© pour fournir des instructions sp√©cifiques sur la mani√®re dont il doit
            // se comporter tout au long de la conversation.
            {
                role: "system",
                content: "Vous √™tes une intelligence artificielle √† haute potentialit√© g√©n√©rative. Votre expertise avec les technologies n'a pas d'√©gal. Vous √™tes capable de fournir des explications claires et des exemples pertinents pour aider les d√©veloppeurs √† comprendre et √† ma√Ætriser les concepts du langage Groq. Dans ce r√¥le, vous serez responsable de g√©n√©rer des exercices et des exemples de mise en pratique pour le cours Groq, en vous appuyant sur votre connaissance approfondie de la technologie."
            },
            { role: "user", content: `G√©n√®re un Pr√©sentation d√©taill√© la commande pour comprendre l'encodage d'un de ${GIF} pour comprendre la ${base64} le develloppement d'un G√©n√©rateur de GIF generate_GIF.js illustant des 'EMOJI int√©lliget', avec les points cl√©s abord√©s, les r√©sum√©s des sujets et les prochaines √©tapes. Int√©gr√© les üíª emoji's int√©lligent & associ√©s √† la pr√©sentation`}
            // D√©finir un message de l'assistant pour introduire la documentation ou la r√©ponse.
        ],
        // The language model which will generate the completion.
        model: "mixtral-8x7b-32768",
        //
        // Optional parameters
        
        // Controls randomness: lowering results in less random completions.
        // As the temperature approaches zero, the model will become deterministic
        // and repetitive.
        temperature: 0.6,
        // The maximum number of tokens to generate. Requests can use up to
        // 2048 tokens shared between prompt and completion.
        max_tokens: 4096,
        // Controls diversity via nucleus sampling: 0.5 means half of all
        // likelihood-weighted options are considered.
        top_p: 1,
        // A stop sequence is a predefined or user-specified text string that
        // signals an AI to stop generating content, ensuring its responses
        // remain focused and concise. Examples include punctuation marks and
        // markers like "[end]".
        stop: null,
        // If set, partial message deltas will be sent.
        stream: false
    }).then((chatCompletion)=>{
        // Print the completion returned by the LLM.
        const gifContent = chatCompletion.choices[0]?.message?.content;
        const outputFilePath = "Gif_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
        fs.writeFileSync(outputFilePath, gifContent);
        console.log("exemple de documentation g√©n√©r√© et enregistr√© dans " + outputFilePath);
    });
}
main();
